/*
 * Tine 2.0 USER CLIENT
 * 
 * license     http://www.gnu.org/licenses/agpl.html AGPL Version 3
 * copyright   Copyright (c) 2007-2011 Metaways Infosystems GmbH (http://www.metaways.de)
 *
 * FOR MORE DETAILED LICENSE AND COPYRIGHT INFORMATION PLEASE CONSULT THE LICENSE FILE 
 * LOCATED AT: <YOUR TINE 2.0 URL>/LICENSE OR VISIT THE TINE 2.0 HOMEPAGE AT http://www.tine20.org
 */
Ext.namespace("Tine","Tine.Tasks");Tine.Tasks.MainScreen=Tine.widgets.MainScreen;Tine.Tasks.TreePanel=function(a){Ext.apply(this,a);this.id="TasksTreePanel";this.recordClass=Tine.Tasks.Task;this.filterMode="filterToolbar";Tine.Tasks.TreePanel.superclass.constructor.call(this)};Ext.extend(Tine.Tasks.TreePanel,Tine.widgets.container.TreePanel,{afterRender:function(){this.supr().afterRender.apply(this,arguments)}});Tine.Tasks.FilterPanel=function(a){Ext.apply(this,a);Tine.Tasks.FilterPanel.superclass.constructor.call(this)};Ext.extend(Tine.Tasks.FilterPanel,Tine.widgets.persistentfilter.PickerPanel,{filter:[{field:"model",operator:"equals",value:"Tasks_Model_TaskFilter"}]});Tine.Tasks.TaskArray=Tine.Tinebase.Model.genericFields.concat([{name:"id"},{name:"percent",header:"Percent"},{name:"completed",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"due",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"class"},{name:"description"},{name:"geo"},{name:"location"},{name:"organizer"},{name:"originator_tz"},{name:"priority"},{name:"status_id"},{name:"summary"},{name:"url"},{name:"attach"},{name:"attendee"},{name:"tags"},{name:"comment"},{name:"contact"},{name:"related"},{name:"resources"},{name:"rstatus"},{name:"dtstart",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"duration",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"recurid"},{name:"exdate"},{name:"exrule"},{name:"rdate"},{name:"rrule"},{name:"notes"},{name:"alarms"},{name:"relations"}]);Tine.Tasks.Task=Tine.Tinebase.data.Record.create(Tine.Tasks.TaskArray,{appName:"Tasks",modelName:"Task",idProperty:"id",titleProperty:"summary",recordName:"Task",recordsName:"Tasks",containerProperty:"container_id",containerName:"to do list",containersName:"to do lists"});Tine.Tasks.Task.getDefaultData=function(){var a=Tine.Tinebase.appMgr.get("Tasks");return{"class":"PUBLIC",percent:0,organizer:Tine.Tinebase.registry.get("currentAccount"),container_id:a.getMainScreen().getWestPanel().getContainerTreePanel().getDefaultContainerForNewRecords()}};Tine.Tasks.Task.getFilterModel=function(){var a=Tine.Tinebase.appMgr.get("Tasks");return[{label:_("Quick search"),field:"query",operators:["contains"]},{filtertype:"tine.widget.container.filtermodel",app:a,recordClass:Tine.Tasks.Task},{label:a.i18n._("Summary"),field:"summary"},{label:a.i18n._("Due Date"),field:"due",valueType:"date",operators:["within","before","after"]},{filtertype:"tasks.status"},{label:a.i18n._("Responsible"),field:"organizer",valueType:"user"},{filtertype:"tinebase.tag",app:a},{label:a.i18n._("Last modified"),field:"last_modified_time",valueType:"date"},{label:a.i18n._("Last modifier"),field:"last_modified_by",valueType:"user"},{label:a.i18n._("Creation Time"),field:"creation_time",valueType:"date"},{label:a.i18n._("Creator"),field:"created_by",valueType:"user"}]};Tine.Tasks.JsonBackend=new Tine.Tinebase.data.RecordProxy({appName:"Tasks",modelName:"Task",recordClass:Tine.Tasks.Task});Ext.ns("Tine.Tasks.status");Tine.Tasks.status.StatusFilter=Ext.extend(Tine.widgets.grid.FilterModel,{app:null,field:"status_id",defaultOperator:"notin",initComponent:function(){this.operators=["in","notin"];this.label=_("Status");this.defaultValue=Tine.Tasks.status.getClosedStatus();this.supr().initComponent.call(this)},valueRenderer:function(b,a){var c=new Tine.Tasks.status.StatusFilterValueField({app:this.app,filter:b,width:200,id:"tw-ftb-frow-valuefield-"+b.id,value:b.data.value?b.data.value:this.defaultValue,renderTo:a});c.on("specialkey",function(f,d){if(d.getKey()==d.ENTER){this.onFiltertrigger()}},this);c.on("select",this.onFiltertrigger,this);return c}});Tine.widgets.grid.FilterToolbar.FILTERS["tasks.status"]=Tine.Tasks.status.StatusFilter;Tine.Tasks.status.StatusFilterValueField=Ext.extend(Ext.ux.form.LayerCombo,{hideButtons:false,formConfig:{labelAlign:"left",labelWidth:30},getFormValue:function(){var a=[];var d=Tine.Tasks.status.getStore();var b=this.getInnerForm().getForm().getValues();for(var c in b){if(b[c]==="on"&&d.getById(c)){a.push(c)}}return a},getItems:function(){var a=[];Tine.Tasks.status.getStore().each(function(b){a.push({xtype:"checkbox",boxLabel:b.get("status_name"),icon:b.get("status_icon"),name:b.get("id")})},this);return a},setValue:function(a){a=Ext.isArray(a)?a:[a];var c=Tine.Tasks.status.getStore();var b=[];this.currentValue=[];Tine.Tasks.status.getStore().each(function(d){var f=d.get("id");var e=d.get("status_name");if(a.indexOf(f)>=0){b.push(e);this.currentValue.push(f)}},this);this.setRawValue(b.join(", "));return this},setFormValue:function(a){this.getInnerForm().getForm().items.each(function(b){b.setValue(a.indexOf(b.name)>=0?"on":"off")},this)}});Tine.Tasks.status.ComboBox=Ext.extend(Ext.form.ComboBox,{autoExpand:false,blurOnSelect:false,fieldLabel:"status",name:"status",displayField:"i18n_status_name",valueField:"id",mode:"local",triggerAction:"all",emptyText:"Status...",typeAhead:true,selectOnFocus:true,editable:false,lazyInit:false,translation:null,initComponent:function(){this.translation=new Locale.Gettext();this.translation.textdomain("Tasks");this.store=Tine.Tasks.status.getStore();if(!this.value){this.value=Tine.Tasks.status.getIdentifier("IN-PROCESS")}if(this.autoExpand){this.lazyInit=false;this.on("focus",function(){this.onTriggerClick()})}if(this.blurOnSelect){this.on("select",function(){this.fireEvent("blur",this)},this)}Tine.Tasks.status.ComboBox.superclass.initComponent.call(this)},setValue2:function(a){if(!a){return}Tine.Tasks.status.ComboBox.superclass.setValue.call(this,a)}});Ext.reg("tasksstatuscombo",Tine.Tasks.status.ComboBox);Tine.Tasks.status.getStore=function(){if(!a){var a=new Ext.data.JsonStore({fields:[{name:"id"},{name:"created_by"},{name:"creation_time",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"last_modified_by"},{name:"last_modified_time",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"is_deleted"},{name:"deleted_time",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"deleted_by"},{name:"status_name"},{name:"i18n_status_name"},{name:"status_is_open",type:"bool"},{name:"status_icon"}],data:Tine.Tasks.registry.get("AllStatus"),autoLoad:true,id:"id"});var b=Tine.Tinebase.appMgr.get("Tasks");a.each(function(c){c.set("i18n_status_name",b.i18n._hidden(c.get("status_name")))},this)}return a};Tine.Tasks.status.getClosedStatus=function(){var a=[];Tine.Tasks.status.getStore().each(function(b){if(!b.get("status_is_open")){a.push(b.get("id"))}},this);return a};Tine.Tasks.status.getIdentifier=function(b){var c=Tine.Tasks.status.getStore().find("status_name",b);var a=Tine.Tasks.status.getStore().getAt(c);return a?a.data.id:b};Tine.Tasks.status.getStatus=function(b){var a=Tine.Tasks.status.getStore().getById(b);return a?a:b};Tine.Tasks.status.getStatusIcon=function(b){var a=Tine.Tasks.status.getStatus(b);if(!a){return}return'<img class="TasksMainGridStatus" src="'+a.data.status_icon+'" ext:qtip="'+a.data.status_name+'">'};Ext.namespace("Tine.Tasks");Tine.Tasks.GridPanel=Ext.extend(Tine.widgets.grid.GridPanel,{recordClass:Tine.Tasks.Task,defaultSortInfo:{field:"due",dir:"ASC"},gridConfig:{clicksToEdit:"auto",quickaddMandatory:"summary",autoExpandColumn:"summary",enableDragDrop:true,ddGroup:"containerDDGroup"},i18nDeleteQuestion:["Do you really want to delete the selected task?","Do you really want to delete the selected tasks?"],initComponent:function(){this.recordProxy=Tine.Tasks.JsonBackend;this.gridConfig.cm=this.getColumnModel();this.initFilterToolbar();this.plugins=this.plugins||[];this.plugins.push(this.filterToolbar);Tine.Tasks.GridPanel.superclass.initComponent.call(this)},initFilterToolbar:function(){this.filterToolbar=new Tine.widgets.grid.FilterToolbar({recordClass:this.recordClass,filterModels:Tine.Tasks.Task.getFilterModel(),defaultFilter:"query",filters:[{field:"status_id",operator:"notin",value:Tine.Tasks.status.getClosedStatus()},{field:"container_id",operator:"equals",value:{path:Tine.Tinebase.container.getMyNodePath()}}],plugins:[new Tine.widgets.grid.FilterToolbarQuickFilterPlugin()]})},getColumnModel:function(){return new Ext.grid.ColumnModel({defaults:{sortable:true,resizable:true},columns:[{id:"tags",header:this.app.i18n._("Tags"),width:40,dataIndex:"tags",sortable:false,renderer:Tine.Tinebase.common.tagsRenderer},{id:"lead_name",header:this.app.i18n._("Lead"),dataIndex:"relations",width:175,sortable:false,hidden:true,renderer:this.leadRenderer},{id:"summary",header:this.app.i18n._("Summary"),width:400,dataIndex:"summary",quickaddField:new Ext.form.TextField({emptyText:this.app.i18n._("Add a task...")})},{id:"due",header:this.app.i18n._("Due Date"),width:60,dataIndex:"due",renderer:Tine.Tinebase.common.dateRenderer,editor:new Ext.ux.form.ClearableDateField({}),quickaddField:new Ext.ux.form.ClearableDateField({})},{id:"priority",header:this.app.i18n._("Priority"),width:45,dataIndex:"priority",renderer:Tine.widgets.Priority.renderer,editor:new Tine.widgets.Priority.Combo({allowBlank:false,autoExpand:true,blurOnSelect:true}),quickaddField:new Tine.widgets.Priority.Combo({autoExpand:true})},{id:"percent",header:this.app.i18n._("Percent"),width:50,dataIndex:"percent",renderer:Ext.ux.PercentRenderer,editor:new Ext.ux.PercentCombo({autoExpand:true,blurOnSelect:true}),quickaddField:new Ext.ux.PercentCombo({autoExpand:true})},{id:"status_id",header:this.app.i18n._("Status"),width:45,dataIndex:"status_id",renderer:Tine.Tasks.status.getStatusIcon,editor:new Tine.Tasks.status.ComboBox({autoExpand:true,blurOnSelect:true,listClass:"x-combo-list-small"}),quickaddField:new Tine.Tasks.status.ComboBox({autoExpand:true})},{id:"creation_time",header:this.app.i18n._("Creation Time"),hidden:true,width:90,dataIndex:"creation_time",renderer:Tine.Tinebase.common.dateTimeRenderer},{id:"completed",header:this.app.i18n._("Completed"),hidden:true,width:90,dataIndex:"completed",renderer:Tine.Tinebase.common.dateTimeRenderer},{id:"organizer",header:this.app.i18n._("Responsible"),width:150,dataIndex:"organizer",renderer:Tine.Tinebase.common.accountRenderer,quickaddField:new Tine.Addressbook.SearchCombo({userOnly:true,nameField:"n_fileas",blurOnSelect:true,selectOnFocus:true,value:Tine.Tinebase.registry.get("currentAccount").accountDisplayName,selectedRecord:new Tine.Addressbook.Model.Contact(Tine.Tinebase.registry.get("userContact")),getValue:function(){if(this.selectedRecord){return this.selectedRecord.get("account_id")}}})}]})},leadRenderer:function(c){if(Ext.isArray(c)&&c.length>0){var b=0;while(b<c.length&&c[b].related_model!="Crm_Model_Lead"){b++}if(c[b]){var a=(c[b].related_record.lead_name!==null)?c[b].related_record.lead_name:"";return Ext.util.Format.htmlEncode(a)}}},getToolbarItems:function(){this.action_showClosedToggle=new Tine.widgets.grid.FilterButton({text:this.app.i18n._("Show closed"),iconCls:"action_showArchived",field:"showClosed"});return[new Ext.Toolbar.Separator(),this.action_showClosedToggle]},getViewRowClass:function(a,d){var f=a.get("due");var e="";if(f){var c=f.format("Y-m-d");var b=new Date().format("Y-m-d");if(c==b){e+="tasks-grid-duetoday"}else{if(c<b){e+="tasks-grid-overdue"}}}return e}});Ext.namespace("Tine.Tasks");Tine.Tasks.TaskEditDialog=Ext.extend(Tine.widgets.dialog.EditDialog,{containerId:-1,relatedApp:"",labelAlign:"side",windowNamePrefix:"TasksEditWindow_",appName:"Tasks",recordClass:Tine.Tasks.Task,recordProxy:Tine.Tasks.JsonBackend,showContainerSelector:true,tbarItems:[{xtype:"widget-activitiesaddbutton"}],initComponent:function(){this.alarmPanel=new Tine.widgets.dialog.AlarmPanel({});this.linkPanel=new Tine.widgets.dialog.LinkPanel({relatedRecords:(Tine.Crm&&Tine.Tinebase.common.hasRight("run","Crm"))?{Crm_Model_Lead:{recordClass:Tine.Crm.Model.Lead,dlgOpener:Tine.Crm.LeadEditDialog.openWindow}}:{}});Tine.Tasks.TaskEditDialog.superclass.initComponent.call(this)},onRecordLoad:function(){if(!this.rendered){this.onRecordLoad.defer(250,this);return}Tine.Tasks.TaskEditDialog.superclass.onRecordLoad.apply(this,arguments);this.handleCompletedDate();this.alarmPanel.onRecordLoad(this.record);this.linkPanel.onRecordLoad(this.record)},onRecordUpdate:function(){Tine.Tasks.TaskEditDialog.superclass.onRecordUpdate.apply(this,arguments);this.alarmPanel.onRecordUpdate(this.record)},handleCompletedDate:function(){if(this.getForm().findField("status_id")===null){return}var a=Tine.Tasks.status.getStatus(this.getForm().findField("status_id").getValue());var b=this.getForm().findField("completed");if(a.get("status_is_open")){b.setValue(null);b.setDisabled(true)}else{if(!Ext.isDate(b.getValue())){b.setValue(new Date())}b.setDisabled(false)}},isValid:function(){isValid=true;var b=this.getForm().findField("due"),a=b.getValue(),c=parseInt(this.alarmPanel.alarmCombo.getValue(),10);if(Ext.isNumber(c)&&!Ext.isDate(a)){b.markInvalid(this.app.i18n._("You have to supply a due date, because an alarm ist set!"));isValid=false}return isValid&&Tine.Tasks.TaskEditDialog.superclass.isValid.apply(this,arguments)},getFormItems:function(){return{xtype:"tabpanel",border:false,plain:true,activeTab:0,border:false,items:[{title:this.app.i18n.n_("Task","Tasks",1),autoScroll:true,border:false,frame:true,layout:"border",items:[{region:"center",xtype:"columnform",labelAlign:"top",formDefaults:{xtype:"textfield",anchor:"100%",labelSeparator:"",columnWidth:0.333},items:[[{columnWidth:1,fieldLabel:this.app.i18n._("Summary"),name:"summary",listeners:{render:function(a){a.focus(false,250)}},allowBlank:false}],[new Ext.ux.form.ClearableDateField({fieldLabel:this.app.i18n._("Due date"),name:"due"}),new Tine.widgets.Priority.Combo({fieldLabel:this.app.i18n._("Priority"),name:"priority"}),new Tine.Addressbook.SearchCombo({emptyText:_("Add Responsible ..."),userOnly:true,name:"organizer",nameField:"n_fileas",useAccountRecord:true})],[{columnWidth:1,fieldLabel:this.app.i18n._("Notes"),emptyText:this.app.i18n._("Enter description..."),name:"description",xtype:"textarea",height:200}],[new Ext.ux.PercentCombo({fieldLabel:this.app.i18n._("Percentage"),editable:false,name:"percent"}),new Tine.Tasks.status.ComboBox({fieldLabel:this.app.i18n._("Status"),name:"status_id",listeners:{scope:this,change:this.handleCompletedDate}}),new Ext.form.DateField({fieldLabel:this.app.i18n._("Completed"),name:"completed"})]]},{layout:"accordion",animate:true,region:"east",width:210,split:true,collapsible:true,collapseMode:"mini",header:false,margins:"0 5 0 5",border:true,items:[new Tine.widgets.activities.ActivitiesPanel({app:"Tasks",showAddNoteForm:false,border:false,bodyStyle:"border:1px solid #B5B8C8;"}),new Tine.widgets.tags.TagPanel({app:"Tasks",border:false,bodyStyle:"border:1px solid #B5B8C8;"})]}]},new Tine.widgets.activities.ActivitiesTabPanel({app:this.appName,record_id:(this.record)?this.record.id:"",record_model:this.appName+"_Model_"+this.recordClass.getMeta("modelName")}),this.alarmPanel,this.linkPanel]}}});Tine.Tasks.TaskEditDialog.openWindow=function(a){var c=(a.record&&a.record.id)?a.record.id:0;var b=Tine.WindowFactory.getWindow({width:800,height:490,name:Tine.Tasks.TaskEditDialog.prototype.windowNamePrefix+c,contentPanelConstructor:"Tine.Tasks.TaskEditDialog",contentPanelConstructorConfig:a});return b};